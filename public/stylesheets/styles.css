body {
    padding-top: 10px;
}

body { 
    width: 100%;
    height:100%;
    font-family: 'Open Sans', sans-serif;
    background: #092756;
    background: -moz-radial-gradient(0% 100%, ellipse cover, rgba(10,128,138,.4) 10%,rgba(138,114,76,0) 40%),-moz-linear-gradient(top,  rgba(57,173,219,.25) 0%, rgba(42,60,87,.4) 100%), -moz-linear-gradient(-45deg,  #670d10 0%, #092756 100%);
    background: -webkit-radial-gradient(0% 100%, ellipse cover, rgba(10,128,138,.4) 10%,rgba(138,114,76,0) 40%), -webkit-linear-gradient(top,  rgba(57,173,219,.25) 0%,rgba(42,60,87,.4) 100%), -webkit-linear-gradient(-45deg,  #670d10 0%,#092756 100%);
    background: -o-radial-gradient(0% 100%, ellipse cover, rgba(10,128,138,.4) 10%,rgba(138,114,76,0) 40%), -o-linear-gradient(top,  rgba(57,173,219,.25) 0%,rgba(42,60,87,.4) 100%), -o-linear-gradient(-45deg,  #670d10 0%,#092756 100%);
    background: -ms-radial-gradient(0% 100%, ellipse cover, rgba(10,128,138,.4) 10%,rgba(138,114,76,0) 40%), -ms-linear-gradient(top,  rgba(57,173,219,.25) 0%,rgba(42,60,87,.4) 100%), -ms-linear-gradient(-45deg,  #670d10 0%,#092756 100%);
    background: -webkit-radial-gradient(0% 100%, ellipse cover, rgba(10,128,138,.4) 10%,rgba(138,114,76,0) 40%), linear-gradient(to bottom,  rgba(57,173,219,.25) 0%,rgba(42,60,87,.4) 100%), linear-gradient(135deg,  #670d10 0%,#092756 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#3E1D6D', endColorstr='#092756',GradientType=1 );
}

h1 {
    color: white;
    margin-left: 20px;
}


.names{

}
.todoList h1{
    color: #6D7993;
}
.todoList button{
    width: 60%;
}

#exampleSelect1{
    width: 40px;

}
.container {
    background-color: #eeeeee;
    border: 1px solid #ccc;
    padding: 20px;
    top: 20px;
    -webkit-box-shadow: 0 2px 2px 1px rgba(0, 0, 0, 0.2);
    box-shadow: 0 2px 2px 1px rgba(0, 0, 0, 0.2);
}

.prioridad {
    margin-left: 5px;
    margin-right: 10px;
}

input[type='text'] {
    margin-bottom: 15px;
}

button {
    width: 100%;
    margin-top: 10px;
}

.editBtn button{
	 width: 30%;
	 margin: 10px auto;
}

.todoList {
    border: 1px solid LightBlue;
    border-radius: 5px;
    padding: 10px;
    color: #000000
}

.glyphicon-circle-arrow-up,
.glyphicon-circle-arrow-down,
.glyphicon-edit,
.glyphicon-remove{
    cursor: pointer
}

.glyphicon-edit{
    padding-left: 10px;
    padding-right: 10px;
}

.prioridad{
     padding-left: 5px;
}

.item {
    border-bottom: 1px solid SteelBlue;
    margin-top: 10px;
    padding-left: 5px;
    padding-right: 5px;
    padding-bottom: 5px;
    color: #454545;
}

.item.ng-move,
.item.ng-enter,
.item.ng-leave {
    transition: all linear 1s;
}

.item.ng-leave.ng-leave-active,
.item.ng-move,
.item.ng-enter {
    opacity: 0;
}

.item.ng-leave,
.item.ng-move.ng-move-active,
.item.ng-enter.ng-enter-active {
    opacity: 1;
}

.courses-class button{
    width: 75%;
}

@import url(http://fonts.googleapis.com/css?family=Montserrat:400,700|Open+Sans);

body {
  background-color: #0000;
}


.header-content h1{
    color: #6D7993;
    margin-top: 0px;
}
.card {
  background-color: #f4f4f4;
  width: 80%;
  height: 150%;
  margin: 10px auto;
  box-shadow: 1px 1px 10px 1px rgba(0,0,0,0.7);
}

.card-header {
  overflow: hidden;
  width: 95%;
  max-height: 50%;
}

.card-header img{
  width: 150px;
  height: 150px;
}

.card-content {
  width: 85%;
  margin: 35px auto;
}

.card-content h3 {
  font-size: 25px;
  margin-bottom: 0;
  color: #303F9F;
  font-family: 'Montserrat', sans-serif;
}

.card-content h4 {
  font-size: 20px;
  margin-top: 0;
  color: #5cb85c;
  font-family: 'Montserrat', sans-serif;
}

.card-content p {
  color: #727272;
  font-size: 15px;
  font-family: 'Open Sans', sans-serif;
  
}

.card-footer {
  border-top: solid 1px #B6B6B6;
  padding: 5px;
}

.card-footer ul {
  padding: 0;
  width: 90%;
  margin: auto;
  text-align: center;
}

.card-footer ul li{
  display: inline-block;
  list-style: none;
  margin: 5px;
}

.card-footer ul li i {
  font-size: 2em;
  color: #3F51B5;
}


/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
.simpleDemo ul[dnd-list],
.simpleDemo ul[dnd-list] > li {
    position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.simpleDemo ul[dnd-list] {
    min-height: 42px;
    padding-left: 0px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
.simpleDemo ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
.simpleDemo ul[dnd-list] .dndPlaceholder {
    display: block;
    background-color: #ddd;
    min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.simpleDemo ul[dnd-list] li {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;
}

/**
 * Show selected elements in green
 */
.simpleDemo ul[dnd-list] li.selected {
    background-color: #dff0d8;
    color: #3c763d;
}